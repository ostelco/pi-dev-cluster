### This docker image is used for deploying the needed infrastructure for Prime on a newly created Google cloud project
### It mostly uses gcloud commands and can run Java apps to do the setup.
### The setup instructions are in the setup.sh bash script.
### The image is pushed to the private docker registry as eu.gcr.io/pi-ostelco-dev/infra 

FROM gradle:5.1-jdk8 as builder

RUN git clone https://github.com/ostelco/ostelco-core.git
RUN cd ostelco-core/dataflow-pipelines/ \
    && gradle clean build 



FROM eu.gcr.io/pi-ostelco-dev/python-gcloud

#
# UTF-8 by default
#
RUN apt-get -qq update && \
    apt-get -qqy install gnupg2 locales && \
    locale-gen en_US.UTF-8 && \
    rm -rf /var/lib/apt/lists/*

ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

#
# Pull Zulu OpenJDK binaries from official repository:
#
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0xB1998361219BD9C9 && \
    echo "deb http://repos.azulsystems.com/ubuntu stable main" >> /etc/apt/sources.list.d/zulu.list && \
    apt-get -qq update && \
    apt-get -qqy install zulu-8=8.33.0.1 && \
    rm -rf /var/lib/apt/lists/*
    
COPY --from=builder /home/gradle/ostelco-core/dataflow-pipelines/build/libs/dataflow-pipelines-uber.jar /dataflow-pipelines.jar 
COPY setup.sh /setup.sh

CMD [ "/setup.sh" ]