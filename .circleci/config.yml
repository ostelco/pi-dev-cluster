version: 2
jobs:
  terraform-dev-plan:
    docker:
      # this image takes gcloud credentials from an env variable called: GOOGLE_CREDENTIALS and authenticates gcloud with it.
      # the credentials file is made available inside the container in: /tmp/credentials.json
    - image: eu.gcr.io/pi-ostelco-dev/terraform-gcloud:11.7
      environment: 
        CLUSTER: dev
        GOOGLE_CREDENTIALS: /tmp/credentials.json

    working_directory: ~/repo

    steps:
    - checkout
    - run:
        name: running terraform plan for dev cluster
        command: |
          /docker-entrypoint.sh 
          terraform init
          terraform plan \
          -var cluster_admin_password=$DEV_CLUSTER_PASSWORD

  terraform-dev-apply:
    docker:
    - image: eu.gcr.io/pi-ostelco-dev/terraform-gcloud:11.7
      environment: 
        CLUSTER: dev
        GOOGLE_CREDENTIALS: /tmp/credentials.json

    working_directory: ~/repo

    steps:
    - checkout
    - run:
        name: running terraform apply for dev cluster
        command: |
          /docker-entrypoint.sh
          terraform init
          terraform apply --auto-approve  \
          -var cluster_admin_password=$DEV_CLUSTER_PASSWORD
          chmod +x .circleci/store_cluster_certs.sh 
          .circleci/store_cluster_certs.sh 

    - persist_to_workspace:
          root: ~/repo/
          paths:
            - endpoint.txt      

  deploy-dev-utilities: 
    docker:
    - image: praqma/helmsman:test-1.4.0

    working_directory: ~/repo

    steps:
    - checkout
    - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/repo  
    - run:
        name: deploying utilities/dependencies to dev cluster with Helmsman
        command: | 
          echo $PI_DEV_GOOGLE_CREDENTIALS > /tmp/credentials.json
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/credentials.json
          export PI_DEV_K8S_ENDPOINT=https://$(cat endpoint.txt)
          cd .circleci      
          helmsman --debug --apply -f helmsman-dev-utilities.toml 

  terraform-prod-plan:
    docker:
    - image: eu.gcr.io/pi-ostelco-dev/terraform-gcloud:11.7
      environment: 
        CLUSTER: prod
        GOOGLE_CREDENTIALS: /tmp/credentials.json

    working_directory: ~/repo

    steps:
    - checkout
    - run:
        name: running terraform plan for prod cluster
        command: |
          /docker-entrypoint.sh
          terraform init
          terraform plan \
          -var cluster_admin_password=$PROD_CLUSTER_PASSWORD


  terraform-prod-apply:
    docker:
    - image: eu.gcr.io/pi-ostelco-dev/terraform-gcloud:11.7
      environment: 
        CLUSTER: prod
        GOOGLE_CREDENTIALS: /tmp/credentials.json

    working_directory: ~/repo

    steps:
    - checkout
    - run:
        name: running terraform apply for prod cluster
        command: |
          /docker-entrypoint.sh
          terraform init
          terraform apply --auto-approve  \
          -var cluster_admin_password=$PROD_CLUSTER_PASSWORD 
          chmod +x .circleci/store_cluster_certs.sh 
          .circleci/store_cluster_certs.sh       

workflows:
  version: 2
  clusters-plan-approve-and-deploy:
    jobs:
    - terraform-dev-plan:
        filters:
          branches:
            only:
            - dev

    - hold-before-updating-dev-cluster:
        type: approval
        requires:
        - terraform-dev-plan

    - terraform-dev-apply:
        requires:
        - hold-before-updating-dev-cluster
    - deploy-dev-utilities:
        requires:
          - terraform-dev-apply   

    - terraform-prod-plan:
        filters:
          branches:
            only:
            - master

    - hold-before-updating-prod-cluster:
        type: approval
        requires:
        - terraform-prod-plan

    - terraform-prod-apply:
        requires:
        - hold-before-updating-prod-cluster    