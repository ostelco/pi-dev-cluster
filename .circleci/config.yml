version: 2
jobs:
  terraform-dev-plan:
    docker:
      # this image takes gcloud credentials from an env variable called: GOOGLE_CREDENTIALS and authenticates gcloud with it.
      # the credentials file is made available inside the container in: /tmp/credentials.json
    - image: eu.gcr.io/pi-ostelco-dev/terraform-gcloud:11.7
      environment: 
        GOOGLE_CREDENTIALS: $PI_DEV_GOOGLE_CREDENTIALS

    working_directory: ~/repo

    steps:
    - checkout
    - run:
        name: running terraform plan for dev cluster
        command: |
          terraform init
          terraform plan \
          -var cluster_password=$DEV_CLUSTER_PASSWORD

  terraform-dev-apply:
    docker:
    - image: eu.gcr.io/pi-ostelco-dev/terraform-gcloud:11.7
      environment: 
        GOOGLE_CREDENTIALS: $PI_DEV_GOOGLE_CREDENTIALS

    working_directory: ~/repo

    steps:
    - checkout
    - run:
        name: running terraform apply for dev cluster
        command: |
          terraform init
          terraform apply --auto-approve  \
          -var cluster_password=$DEV_CLUSTER_PASSWORD

  terraform-prod-plan:
    docker:
    - image: eu.gcr.io/pi-ostelco-dev/terraform-gcloud:11.7
      environment: 
        GOOGLE_CREDENTIALS: $PI_PROD_GOOGLE_CREDENTIALS

    working_directory: ~/repo

    steps:
    - checkout
    - run:
        name: running terraform plan for prod cluster
        command: |
          terraform init
          terraform plan \
          -var cluster_password=$PROD_CLUSTER_PASSWORD

  terraform-prod-apply:
    docker:
    - image: eu.gcr.io/pi-ostelco-dev/terraform-gcloud:11.7
      environment: 
        GOOGLE_CREDENTIALS: $PI_PROD_GOOGLE_CREDENTIALS

    working_directory: ~/repo

    steps:
    - checkout
    - run:
        name: running terraform apply for prod cluster
        command: |
          terraform init
          terraform apply --auto-approve  \
          -var cluster_password=$PROD_CLUSTER_PASSWORD        

workflows:
  version: 2
  clusters-plan-approve-and-deploy:
    jobs:
    - terraform-dev-plan:
        filters:
          branches:
            only:
            - dev

    - hold-before-creating-dev-cluster:
        type: approval
        requires:
        - terraform-dev-plan

    - terraform-dev-apply:
        requires:
        - hold-before-creating-dev-cluster

    - terraform-prod-plan:
        filters:
          branches:
            only:
            - master

    - hold-before-creating-prod-cluster:
        type: approval
        requires:
        - terraform-prod-plan

    - terraform-prod-apply:
        requires:
        - hold-before-creating-prod-cluster    