# metadata -- add as many key/value pairs as you want
[metadata]
maintainer = "Sami Alajrami (sami@praqma.com)"
description = "Desired state file for deploying needed utilities for Prime."

# paths to the certificate for connecting to the cluster
# you have to use exact key names here : 'caCrt' for certificate and 'caKey' for the key and caClient for the client certificate
[certificates]
caClient = "gs://pi-ostelco-dev-k8s-key-store/keys/dev_cluster_client_certificate.crt" 
caCrt = "gs://pi-ostelco-dev-k8s-key-store/keys/dev_cluster_cluster_ca.crt" 
caKey = "gs://pi-ostelco-dev-k8s-key-store/keys/dev_cluster_client_key.key" 

[settings]
kubeContext = "ostelco" # will try connect to this context first, if it does not exist, it will be created using the details below
username = "admin"
password = "$DEV_CLUSTER_PASSWORD" # the name of an environment variable containing the k8s password
clusterURI = "$PI_DEV_K8S_ENDPOINT" # the name of an environment variable containing the cluster API
serviceAccount = "tiller" # k8s serviceaccount. If it does not exist, it will be created.
storageBackend = "secret" # default is configMap

# define your environments and their k8s namespaces
# syntax: 
# [namespaces.<your namespace>] -- whitespace before this entry does not matter, use whatever indentation style you like 
 # protected = <true or false> -- default to false 
[namespaces]
  [namespaces.neo4j]
  # [namespaces.vault]

# define any private/public helm charts repos you would like to get charts from
# syntax: repo_name = "repo_url"
# private repos hosted in s3,GCS buckets are supported
[helmRepos]
ostelco="https://storage.googleapis.com/pi-ostelco-helm-charts-repo/"
stable = "https://kubernetes-charts.storage.googleapis.com"
jetstack = "https://charts.jetstack.io"


[apps]

    [apps.cert-manager]
    name = "cert-manager" # should be unique across all apps
    description = "Cert manager for managing SSL certificates."
    namespace = "kube-system" # maps to the namespace as defined in environmetns above
    enabled = true # change to false if you want to delete this app release [empty = flase]
    chart = "jetstack/cert-manager" # changing the chart name means delete and recreate this chart
    version = "0.8.0"
    valuesFile = "apps/cert-manager-values.yaml" # leaving it empty uses the default chart values
    wait = true
    priority = -9
    protected = true

    [apps.cert-issuer]
    name = "cert-issuer" # should be unique across all apps
    description = "Cluster Issuers for Cert manager."
    namespace = "kube-system" # maps to the namespace as defined in environmetns above
    enabled = true # change to false if you want to delete this app release [empty = flase]
    chart = "ostelco/cert-issuer" # changing the chart name means delete and recreate this chart
    version = "0.2.0"
    valuesFile = "apps/cert-issuer-values.yaml" # leaving it empty uses the default chart values
    priority = -8
    protected = true

    [apps.neo4j]
    name = "neo4j"
    description = "Neo4J deployment"
    namespace = "neo4j"
    enabled = true
    chart = "ostelco/neo4j"
    version = "1.0.0"
    valuesFile = "apps/neo4j-values.yaml"
    priority = -7 
    wait = true
    protected = true

    [apps.prometheus]
    description = "Promethues dev instance"
    namespace = "kube-system" 
    enabled = true
    chart = "stable/prometheus"
    version = "8.4.2"
    valuesFile = "apps/prometheus-values.yaml"
    priority = -5
    wait = true
    protected = true

    # [apps.grafana]
    # description = "Grafana dev instance"
    # namespace = "kube-system" 
    # enabled = true
    # chart = "stable/grafana"
    # version = "1.26.1"
    # valuesFile = "apps/grafana-values.yaml"
    # priority = -4
    # wait = true
    # protected = true
    # [apps.grafana.set]
    # "adminPassword"="$GRAFANA_ADMIN_PASSWORD"

    [apps.ambassador]
    description = "Ambassador API Gateway."
    namespace = "kube-system" 
    enabled = true 
    chart = "stable/ambassador" 
    version = "2.8.2"
    valuesFile = "apps/ambassador-values.yaml" 
    wait = true
    priority = -6
    protected = false
     [apps.ambassador.set]
      "service.loadBalancerIP" = "$AMBASSADOR_STATIC_IP"

    # [apps.vault]
    # name = "vault"
    # description = "Vault for secrets"
    # namespace = "vault"
    # enabled = true
    # chart = "incubator/vault"
    # version = "0.18.4"
    # valuesFile = "apps/vault-values.yaml"
